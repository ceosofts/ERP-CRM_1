โครงสร้างของหน้า Dashboard

Route: เส้นทางสำหรับการเข้าถึง Dashboard
Middleware: ตรวจสอบว่าผู้ใช้เข้าสู่ระบบหรือยัง
Controller: ประมวลผลข้อมูลที่จะแสดงใน Dashboard
View: ออกแบบหน้าจอ Dashboard

ขั้นตอนการสร้างหน้า Dashboard

1. สร้าง Route สำหรับ Dashboard
ไฟล์ที่ต้องแก้ไข: routes/web.php
เปิดไฟล์ routes/web.php

เพิ่ม Route สำหรับ Dashboard:

php
Copy
Edit
Route::get('/dashboard', [DashboardController::class, 'index'])->middleware('auth')->name('dashboard');
middleware('auth'): ตรวจสอบว่าผู้ใช้เข้าสู่ระบบหรือยัง
DashboardController: จะเป็นตัวจัดการข้อมูลที่จะแสดงใน Dashboard
2. สร้าง Controller สำหรับ Dashboard
คำสั่งใน Terminal:
สร้าง Controller ชื่อ DashboardController:
bash
Copy
Edit
php artisan make:controller DashboardController
ไฟล์ที่ต้องแก้ไข: app/Http/Controllers/DashboardController.php
เปิดไฟล์ DashboardController.php
เพิ่มโค้ดดังนี้:
php
Copy
Edit
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class DashboardController extends Controller
{
    // แสดงหน้า Dashboard
    public function index()
    {
        // คุณสามารถส่งข้อมูลไปยัง View ได้ เช่น ยอดขายรายเดือน
        $data = [
            'sales' => 1000, // ตัวอย่างข้อมูลยอดขาย
            'users' => 50,   // ตัวอย่างจำนวนผู้ใช้งาน
        ];

        return view('dashboard', $data);
    }
}
3. สร้าง View สำหรับ Dashboard
คำสั่งใน Terminal:
สร้างไฟล์ View สำหรับ Dashboard:
bash
Copy
Edit
touch resources/views/dashboard.blade.php
ไฟล์ที่ต้องแก้ไข: resources/views/dashboard.blade.php
เปิดไฟล์ dashboard.blade.php

เพิ่มโค้ดดังนี้:

html
Copy
Edit
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
</head>
<body>
    <h1>Welcome to Dashboard</h1>
    <p>Hello, {{ Auth::user()->name }}</p>
    <p>Total Sales: ${{ $sales }}</p>
    <p>Total Users: {{ $users }}</p>
    <form method="POST" action="{{ route('logout') }}">
        @csrf
        <button type="submit">Logout</button>
    </form>
</body>
</html>
Auth::user()->name: แสดงชื่อผู้ใช้ที่เข้าสู่ระบบ
$sales และ $users: แสดงข้อมูลที่ส่งมาจาก Controller
4. เพิ่ม Middleware เพื่อป้องกันการเข้าถึงโดยไม่ได้ Login
ไฟล์ที่ต้องแก้ไข: app/Http/Kernel.php
ตรวจสอบให้แน่ใจว่า Middleware auth ถูกเปิดใช้งานใน $routeMiddleware:
php
Copy
Edit
protected $routeMiddleware = [
    // ...
    'auth' => \App\Http\Middleware\Authenticate::class,
    // ...
];
5. ทดสอบหน้า Dashboard
คำสั่งใน Terminal:
รันเซิร์ฟเวอร์:

bash
Copy
Edit
php artisan serve
เปิดเบราว์เซอร์และเข้าถึง:

URL สำหรับ Dashboard: http://127.0.0.1:8000/dashboard
หากผู้ใช้ยังไม่ได้ Login ระบบจะเปลี่ยนเส้นทางไปยังหน้า Login โดยอัตโนมัติ
ตัวอย่างข้อมูลเพิ่มเติมใน Dashboard
คุณสามารถเพิ่มข้อมูลเพิ่มเติมใน Dashboard ได้ เช่น:

ยอดขายรายเดือน:

Query จากฐานข้อมูลใน DashboardController:
php
Copy
Edit
$sales = Sale::sum('amount');
กราฟและการวิเคราะห์:

ใช้ไลบรารี เช่น Chart.js หรือ Laravel Charts
แสดงรายการข้อมูลล่าสุด:

php
Copy
Edit
$recentOrders = Order::latest()->take(5)->get();
สรุป
Route: เพิ่มเส้นทาง /dashboard พร้อม middleware('auth')
Controller: ดึงข้อมูลที่ต้องการแสดงและส่งไปยัง View
View: ออกแบบหน้า Dashboard
Middleware: ป้องกันการเข้าถึงโดยไม่ได้ Login
